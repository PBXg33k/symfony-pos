<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;


/**
 * ItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemRepository extends EntityRepository
{
    public function dailyReport(){
        $qb = $this->createQueryBuilder('item');

        $qb
            ->select(array( 'p' , 'item'))
            ->addSelect(array('SUM( item.price * item.qty  ) AS income', 'sum(item.cost * item.qty) AS  cost', 'sum(item.price * item.qty) -sum(item.cost * item.qty) AS  profit'))
            ->join('item.operation', 's', 'WITH', 's INSTANCE of AppBundle:Sale')
            ->join('item.product' , 'p')
            ->where($qb->expr()->between('s.createdAt', ':initDate', ':endDate'))
            ->groupBy('p.id')
            ->setParameter('initDate',new \DateTime(date('Y-m-d')) )
            ->setParameter('endDate',new \DateTime("now"));


        return $qb->getQuery()->execute();

    }
    public function getReport($form){
        $cash = $form->get('cash')->getData();

        $qb = $this->createQueryBuilder('item');

        $qb
            ->select(array( 'p' , 'item'))
            ->addSelect(array('SUM( item.price * item.qty  ) AS income', 'sum(item.cost * item.qty) AS  cost', 'sum(item.price * item.qty) -sum(item.cost * item.qty) AS  profit'))
            ->join('item.operation', 's', 'WITH', 's INSTANCE of AppBundle:Sale')
            ->join('item.product' , 'p')
            ->where($qb->expr()->between('s.createdAt', ':initDate', ':endDate'))
            ->groupBy('p.id')
            ->setParameter('initDate', $form->get('initDate')->getData())
            ->setParameter('endDate', $form->get('endDate')->getData());

        if ($cash != 1) {
            $qb
                ->andWhere($qb->expr()->eq('s.cash', ':cash'))
                ->setParameter('cash', $cash == 2);
        }



        return $qb->getQuery()->execute();

    }

}
